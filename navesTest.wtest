import naves.*

describe "Nave de carga" {

	const naveVacia = new NaveDeCarga()
	const naveLlena = new NaveDeCarga(carga = 500000, velocidad = 290000)

	test "sobrecargada" {
		assert.that(naveLlena.sobrecargada())
	}

	test "no sobrecargada" {
		assert.notThat(naveVacia.sobrecargada())
	}

	test "excedida de velocidad" {
		assert.that(naveLlena.excedidaDeVelocidad())
	}

	test "no excedida de velocidad" {
		assert.notThat(naveVacia.excedidaDeVelocidad())
	}

	test "recibir amenaza" {
		naveLlena.recibirAmenaza()
		assert.equals(0, naveVacia.carga())
	}

	test "propulsarse" {
		naveVacia.propulsar()
		assert.equals(20000, naveVacia.velocidad())
	}

}

describe "Nave de residuos radioactivos" {
	const naveDeResiduos = new NaveCargaResiduosRadioactivos(carga = 5000, sellado = true, velocidad = 10000)

  test "nave de residuos" {
	naveDeResiduos.recibirAmenaza()
	assert.equals(0, naveDeResiduos.velocidad())
	assert.equals(5000, naveDeResiduos.carga())
  }

  test "preparar para viajar" {
	const naveDeResiduos2 = new NaveCargaResiduosRadioactivos(velocidad = 0, sellado = false)
	naveDeResiduos2.prepararParaViajar()
	assert.equals(15000, naveDeResiduos2.velocidad())
	assert.that(naveDeResiduos2.sellado())
  }
}

describe "Nave de pasajeros" {

	const naveSinPasajeros = new NaveDePasajeros()
	const naveConPasajeros = new NaveDePasajeros(cantidadDePasajeros = 296, velocidad = 290000)

	test "velocidad maxima sin pasajeros" {
		assert.equals(75000, naveSinPasajeros.velocidadMaximaLegal())
	}

	test "velocidad maxima con pasajeros" {
		assert.equals(1000 - 200, naveConPasajeros.velocidadMaximaLegal())
	}

	test "esta en peligro" {
		assert.that(naveConPasajeros.estaEnPeligro())
	}

	test "no esta en peligro" {
		assert.notThat(naveSinPasajeros.estaEnPeligro())
	}

	test "recibir amenaza" {
		naveSinPasajeros.recibirAmenaza()
		assert.that(naveSinPasajeros.alarma())
	}

	test "propulsar" {
		naveConPasajeros.velocidad(290000)
		naveConPasajeros.propulsar()
		assert.equals(300000, naveConPasajeros.velocidad())
	}

	test "preparar para viajar" {
		naveConPasajeros.velocidad(290000)
	  	naveConPasajeros.prepararParaViajar()
		assert.equals(300000, naveConPasajeros.velocidad())

	}
}

describe "Nave de combate" {

	const naveEnReposo = new NaveDeCombate()
	const naveEnAtaque = new NaveDeCombate(modo = ataque)

	test "no esta invisible en reposo" {
		assert.notThat(naveEnReposo.estaInvisible())
	}

	test "esta invisible en ataque" {
		assert.that(naveEnAtaque.estaInvisible())
	}

	test "no esta invisible en ataque" {
		naveEnAtaque.velocidad(20000)
		assert.notThat(naveEnAtaque.estaInvisible())
	}

	test "recibir amenaza en reposo" {
		naveEnReposo.recibirAmenaza()
		assert.equals("Â¡RETIRADA!", naveEnReposo.ultimoMensaje())
	}

	test "recibir amenaza en ataque" {
		naveEnAtaque.recibirAmenaza()
		assert.equals("Enemigo encontrado", naveEnAtaque.ultimoMensaje())
	}

	test "preparar para viajar" {
	  
	}
}
